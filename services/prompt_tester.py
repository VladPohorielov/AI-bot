"""
Simple script to test GPT prompt accuracy
Usage: python -m services.prompt_tester
"""
import asyncio
from .analysis import gpt_analysis


async def main():
    """Test GPT prompts with example conversations"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GPT –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤")
    print("=" * 50)
    
    # Get test examples
    examples = gpt_analysis.get_prompt_examples()
    
    print(f"–î–æ—Å—Ç—É–ø–Ω–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {len(examples)}")
    print()
    
    # Test all examples
    results = await gpt_analysis.test_prompt_accuracy()
    
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {results['total_tests']}")
    print(f"–£—Å–ø–µ—à–Ω—ã—Ö: {results['passed']}")
    print(f"–¢–æ—á–Ω–æ—Å—Ç—å: {results['passed']/results['total_tests']*100:.1f}%")
    print()
    
    # Show detailed results
    for i, result in enumerate(results['results']):
        print(f"üîç –¢–µ—Å—Ç {i+1}: {result['example_name']}")
        print(f"  –û–∂–∏–¥–∞–ª–æ—Å—å —Å–æ–±—ã—Ç–∏–π: {result['expected_events']}")
        print(f"  –ò–∑–≤–ª–µ—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {result['actual_events']}")
        print(f"  –°—Ç–∞—Ç—É—Å: {'‚úÖ PASSED' if result['events_match'] else '‚ùå FAILED'}")
        print(f"  –†–µ–∑—é–º–µ: {result['summary'][:100]}...")
        
        if result['events']:
            print(f"  –°–æ–±—ã—Ç–∏—è:")
            for j, event in enumerate(result['events']):
                print(f"    {j+1}. {event['title']} ({event['type']}, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {event['priority']})")
        print()

if __name__ == "__main__":
    asyncio.run(main()) 